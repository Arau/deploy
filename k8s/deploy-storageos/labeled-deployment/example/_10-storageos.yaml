 apiVersion: v1
 kind: Secret
 metadata:
   name: storageos-api
   namespace: default
   labels:
     app: storageos
 type: "kubernetes.io/storageos"
 data:
   # Address build from the ClusterIP of the storageos service. In the format $(echo -n "tcp://$ClusterIP:5705" | base64)
   apiAddress: "$API_ADDRESS"
   apiUsername: "c3RvcmFnZW9z"
   apiPassword: "c3RvcmFnZW9z"
---
 apiVersion: storage.k8s.io/v1beta1
 kind: StorageClass
 metadata:
   name: fast
   labels:
     app: storageos
 provisioner: kubernetes.io/storageos
 parameters:
   pool: default
   description: Kubernetes volume
   fsType: ext4
   adminSecretNamespace: default
   adminSecretName: storageos-api
---
 kind: DaemonSet
 apiVersion: apps/v1
 metadata:
   name: storageos
   namespace: default
 spec:
   selector:
     matchLabels:
       app: storageos
   template:
     metadata:
       name: storageos
       labels:
         app: storageos
     spec:
       hostPID: true
       hostNetwork: true
       serviceAccountName: storageos
       initContainers:
       - name: enable-lio
         image: storageos/init:0.1
         imagePullPolicy: Always
         volumeMounts:
           - name: kernel-modules
             mountPath: /lib/modules
             readOnly: true
           - name: sys
             mountPath: /sys
             mountPropagation: Bidirectional
         securityContext:
           privileged: true
           capabilities:
             add:
             - SYS_ADMIN
       containers:
       - name: storageos
         image: "storageos/node:1.0.0-rc1"
         imagePullPolicy: IfNotPresent
         args:
         - server
         ports:
         - containerPort: 5705
           name: api
         livenessProbe:
           initialDelaySeconds: 65
           timeoutSeconds: 10
           failureThreshold: 5
           httpGet:
             path: /v1/health
             port: api
         readinessProbe:
           initialDelaySeconds: 65
           timeoutSeconds: 10
           failureThreshold: 5
           httpGet:
             path: /v1/health
             port: api
         resources:
             {}
         env:
         - name: HOSTNAME
           valueFrom:
             fieldRef:
               fieldPath: spec.nodeName
         - name: JOIN
           value: "$JOIN"
         - name: ADVERTISE_IP
           valueFrom:
             fieldRef:
               fieldPath: status.podIP
         - name: NAMESPACE
           value: default
         securityContext:
           privileged: true
           capabilities:
             add:
             - SYS_ADMIN
         volumeMounts:
           - name: fuse
             mountPath: /dev/fuse
           - name: state
             mountPath: /var/lib/storageos
             mountPropagation: Bidirectional
           - name: sys
             mountPath: /sys
       volumes:
       - name: kernel-modules
         hostPath:
           path: /lib/modules
       - name: fuse
         hostPath:
           path: /dev/fuse
       - name: sys
         hostPath:
           path: /sys
       - name: state
         hostPath:
           path: /var/lib/storageos
